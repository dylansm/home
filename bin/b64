#!/bin/bash

if [[ $# -eq 1 ]]; then
  if [[ `command -v ttx` > /dev/null ]]; then
    font_name=$(ttx -qt name -o - "$1" | xmllint --xpath '//namerecord[@nameID="1"][1]//text()' --format - | xargs echo)
    font_weight_str=$(ttx -qt 'OS/2' -o - "$1" | xmllint --xpath 'string(//usWeightClass[1]/@value)' --format - | xargs echo)
    based_64=$(base64 "$1")
    file_no_ext="${1%%.*}"
    $(`cp "$1" "$file_no_ext"`)
    sfnt2woff "$file_no_ext"
    `rm "$file_no_ext"`
    woff_file="${file_no_ext}.woff"
    woff_based_64=$(base64 "$woff_file")
    woff2=$(woff2_compress "$1")
    woff2_file="${file_no_ext}.woff2"
    woff2_based_64=$(base64 "$woff2_file")
  else
    printf "\n${Yellow}The 'ttx' tool was not found. Install fonttools to use this command (\`pip install fonttools\`).\n"
  fi
else
  printf "\n${Yellow}Pass a font file to this script to generate base64 data in a @font-face block.\n"
fi

round()
{
  echo $((($1 + $2/2) / $2))
}

if [[ ${#font_weight_str} -eq 1 ]]; then
  font_weight=$(($font_weight_str * 100))
else
  font_weight_rounded=$(round $font_weight_str 100)
  font_weight=$(($font_weight_rounded * 100))
fi

shopt -s nocasematch

if [[ $1 =~ '.otf' ]]; then
  mime_type='font/opentype'
  format='opentype'
else
  mime_type='font/ttf'
  format='truetype'
fi

printf "@font-face {\n\
  font-family: '$font_name';\n\
  src: url('data:$mime_type;base64,$based_64') format('$format'),\n\
       url('data:font/woff2;base64,$woff2_based_64') format('woff2'),\n\
       url('data:font/woff;base64,$woff_based_64') format('woff');\n\
  font-weight: $font_weight;\n\
}\n" | pbcopy


printf "\n${Green}Font-face CSS copied to clipboard!\n${Plain}"
